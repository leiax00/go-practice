# mysql + redis + kafka + elasticsearch
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: basic-component

  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: nginx-pv
      namespace: basic-component
      labels:
        pv: nginx-pv
    spec:
      capacity:
        storage: 1Gi
      accessModes:
        - ReadWriteMany
      nfs:
        # FIXME: use the right IP
        server: 192.168.10.10
        path: "/data/k8s/nginx_data"

  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: config-pv
      namespace: basic-component
      labels:
        pv: config-pv
    spec:
      capacity:
        storage: 1Gi
      accessModes:
        - ReadOnlyMany
      nfs:
        # FIXME: use the right IP
        server: 192.168.10.10
        path: "/data/k8s/conf"

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: nginx-pvc
      namespace: basic-component
    spec:
      selector:
        matchLabels:
          pv: nginx-pv
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: config-pvc
      namespace: basic-component
    spec:
      selector:
        matchLabels:
          pv: config-pv
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: Service
    metadata:
      name: base-nginx
      namespace: basic-component
    spec:
      ports:
        - nodePort: 8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: base-nginx
      type: NodePort

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: base-nginx
      namespace: basic-component
    spec:
      selector:
        matchLabels:
          app: base-nginx
      replicas: 1
      template:
        metadata:
          labels:
            app: base-nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: "/data/web"
                  name: nginx-volume
                - mountPath: "/etc"
                  name: nginx-conf-volume
          volumes:
            - name: nginx-volume
              persistentVolumeClaim:
                claimName: nginx-pvc
            - name: nginx-conf-volume
              persistentVolumeClaim:
                claimName: config-pvc